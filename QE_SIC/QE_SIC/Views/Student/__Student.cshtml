
@using QE.Models
@using QE.Models.ViewModels
@model QE.Models.ViewModels._StudentViewModel

@{
    ViewBag.Title = "__Student";
    string photoPath = string.IsNullOrEmpty(Model.selectedStudent.PHOTO_PATH) ? string.Format("{0}{1}", @Constant.IMGPATH, "AddPic.png") : Model.selectedStudent.PHOTO_PATH;
}


<link rel="stylesheet" href="~/Scripts/lib/themes/default.css">
<link rel="stylesheet" href="~/Scripts/lib/themes/default.date.css">
<style>
    /*.wrongInputMsg {
        color: red;
        display: none
    }*/

    .AddPicDiv {
        width: 250px;
        height: 300px;
        margin: auto;
    }

        .AddPicDiv label {
            width: inherit;
            height: inherit;
        }

            .AddPicDiv label img {
                width: inherit;
                height: inherit;
            }

    .addressInput {
        min-width: -webkit-fill-available;
    }


    .blackBtn {
        background-color: #777777;
        font-weight: bold;
        color: white;
        border: none;
        height: 30px;
        width: 200px;
        border-radius: 2px;
        margin: 2px;
    }

    .ut-form-control {
        width: 150px;
        height: 30px;
        background-color: #ffffff;
        border: 1px solid #cccccc;
        border-radius: 4px;
        padding-left: 4px;
        vertical-align: middle;
    }
</style>

<div class="col-md-12">
    @using (Html.BeginForm("_Student", "Student", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        if (Model.selectedStudent.ID == Constant.DEF_INT)
        {
            <label>Create Student</label>
        }
        else
        {
            <label>Edit Student</label>
        }

        @Html.HiddenFor(model => model.selectedStudent.ID)
        @Html.HiddenFor(model => model.selectedStudent.ACTIVE)
        @Html.HiddenFor(model => model.selectedClass)
        @Html.HiddenFor(model => model.selectedTerm)
        <div class="row">
            <div class="col-md-4">
                <div class="AddPicDiv">
                    <label for="photoUpload">
                        <img class="img-thumbnail" src='@photoPath' id="profilePic" />
                    </label>
                    <input type="file" name="file" id="photoUpload" style="display:none" onchange="reloadPic(event)" />
                </div>
                <p>Supported file type: png / jpg / jpeg / bmp</p>
                <input type="submit" value="@Constant.CommonLabel.Save" class="blackBtn" /><br />
                <input type="button" onclick="location.href='@Url.Action("InactiveStudent", "Student")?Class_id=@Model.selectedClass&student_id=@Model.selectedStudent.ID&term_id=@Model.selectedTerm'" value="@Constant.CommonLabel.Delete" class="blackBtn" />
            </div>
            <div class="col-md-8" style="text-align:left">
                <form>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Constant.StudentViewLabel.Admission.StudentID
                            @Html.EditorFor(model => model.selectedStudent.STUDENT_ID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.selectedStudent.STUDENT_ID, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            @Constant.StudentViewLabel.Admission.HKID:
                            @Html.EditorFor(model => model.selectedStudent.HKID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.selectedStudent.HKID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Constant.StudentViewLabel.Admission.StudentNameEng:
                            @Html.EditorFor(model => model.selectedStudent.STUDENT_NAME, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.selectedStudent.STUDENT_NAME, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            @Constant.StudentViewLabel.Admission.StudentNameChi (中文):
                            @Html.EditorFor(model => model.selectedStudent.STUDENT_NAME_CHI, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.selectedStudent.STUDENT_NAME_CHI, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Constant.StudentViewLabel.Admission.House:
                            @Html.EditorFor(model => model.selectedStudent.HOUSE, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.selectedStudent.HOUSE, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            @Constant.StudentViewLabel.Admission.Gender:
                            @Html.EditorFor(model => model.selectedStudent.GENDER, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.selectedStudent.GENDER, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Constant.StudentViewLabel.Admission.DateOfBirth:
                            @Html.TextBoxFor(model => model.selectedStudent.DATE_BIRTH, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker" })
                            @Html.ValidationMessageFor(model => model.selectedStudent.DATE_BIRTH, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            @Constant.StudentViewLabel.Admission.Email:
                            @Html.EditorFor(model => model.selectedStudent.EMAIL, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.selectedStudent.EMAIL, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Constant.StudentViewLabel.Admission.Contact:
                            @Html.EditorFor(model => model.selectedStudent.PHONE, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.selectedStudent.PHONE, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            @Constant.StudentViewLabel.Admission.Contact:
                            @Html.EditorFor(model => model.selectedStudent.PHONE_2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.selectedStudent.PHONE_2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-12">
                            @Constant.StudentViewLabel.Admission.Address:
                            @Html.EditorFor(model => model.selectedStudent.ADDRESS, new { htmlAttributes = new { @class = "form-control addressInput" } })
                            @Html.ValidationMessageFor(model => model.selectedStudent.ADDRESS, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Constant.StudentViewLabel.Admission.Guardian:
                            @Html.EditorFor(model => model.selectedStudent.GUARDIAN, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.selectedStudent.GUARDIAN, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            @Constant.StudentViewLabel.Admission.Guardian_phone:
                            @Html.EditorFor(model => model.selectedStudent.GUARDIAN_PHONE, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.selectedStudent.GUARDIAN_PHONE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Constant.StudentViewLabel.Admission.Guardian:
                            @Html.EditorFor(model => model.selectedStudent.GUARDIAN_2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.selectedStudent.GUARDIAN_2, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            @Constant.StudentViewLabel.Admission.Guardian_phone:
                            @Html.EditorFor(model => model.selectedStudent.GUARDIAN_PHONE_2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.selectedStudent.GUARDIAN_PHONE_2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*<div class="row">
            <div class="form-group col-md-6">
                @Constant.StudentViewLabel.Admission.Guardian:
                @Html.EditorFor(model => model.GUARDIAN_3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GUARDIAN_3, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6">
                @Constant.StudentViewLabel.Admission.Guardian_phone:
                @Html.EditorFor(model => model.GUARDIAN_PHONE_3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GUARDIAN_PHONE_3, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6">
                @Constant.StudentViewLabel.Admission.Guardian:
                @Html.EditorFor(model => model.GUARDIAN_4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GUARDIAN_4, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6">
                @Constant.StudentViewLabel.Admission.Guardian_phone:
                @Html.EditorFor(model => model.GUARDIAN_4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GUARDIAN_4, "", new { @class = "text-danger" })
            </div>
        </div>*@
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Constant.StudentViewLabel.Admission.AddDate:
                            @Html.TextBoxFor(model => model.selectedStudent.DATE_ADMIT, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker" })
                            @Html.ValidationMessageFor(model => model.selectedStudent.DATE_ADMIT, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            @Constant.StudentViewLabel.Admission.ClassNo:
                            @Html.Editor("class_num", Model.selectedStudentNum.ToString(), new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            @Constant.StudentViewLabel.Admission.Special_arg:
                        </div>
                        <div class="form-group col-md-4">
                            @Constant.StudentViewLabel.Admission.CARING_ARG
                            @Html.CheckBoxFor(model => model.selectedStudent.CARING_ARG)
                            @Html.ValidationMessageFor(model => model.selectedStudent.CARING_ARG, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-4">
                            @Constant.StudentViewLabel.Admission.ATTENDANCE_ARG
                            @Html.CheckBoxFor(model => model.selectedStudent.ATTENDANCE_ARG)
                            @Html.ValidationMessageFor(model => model.selectedStudent.ATTENDANCE_ARG, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-4">
                            @Constant.StudentViewLabel.Admission.HOMEWORK_ARG
                            @Html.CheckBoxFor(model => model.selectedStudent.HOMEWORK_ARG)
                            @Html.ValidationMessageFor(model => model.selectedStudent.HOMEWORK_ARG, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </form>
            </div>
        </div>
    }
</div>


@*<script>
        var reloadPic = function (event) {
            var reader = new FileReader();
            reader.onload = function () {
                var output = document.getElementById('profilePic');

                output.src = reader.result;
            };
            reader.readAsDataURL(event.target.files[0]);
        }
    </script>*@


<div id="container"></div>

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/lib/picker.js"></script>
<script src="~/Scripts/lib/picker.date.js"></script>
<script src="~/Scripts/lib/legacy.js"></script>
<script>
    var $input = $('.datepicker').pickadate({
        formatSubmit: 'yyyy/mm/dd',
        // min: [2015, 7, 14],
        container: '#container',
        // editable: true,
        closeOnSelect: true,
        closeOnClear: false,
    })


    var picker = $input.pickadate('picker')
</script>
